Crystal Interest Bot

    Бот обходит ссылки из белого списка сайтов и пытается обнаружить насколько изменились страницы
    с момента последнего прохода.

Crystal Interest Bot Helper

    Вспомогательный бот для трансформации слепков (impress документы из MongoDB)
    в простой текст и сохранения этого текста в text документы в MongoDB с
    дополнительными данными, необходимыми для передачи их в Sphinx через xmlpipe2

Деплой

    NodeJS ( >=v0.10.23 )
        выбрать установку под систему
        https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager

        CentOS 6 - need to add EPEL repo
        https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#rhelcentosscientific-linux-6

    recode ( >= v3.6 )

        $ sudo yum install recode.i686
    
    Python2

        $ sudo pip install chardet

        $ sudo yum install gcc python-devel
        $ sudo yum install pymongo
        $ sudo yum install python-lxml.i686

    MySQL

    подключается к alpha.crystalteam.ru (по умолчанию)
    работает с таблицой Crawler.domain

    MongoDB

    http://www.mongodb.org/downloads
    использует 4 коллекции (все коллекции Mongo создает само (автоматически)):
        log - для хранения снимков памяти
        impresses - для хранения тела http ответов
        ferry_tasks - для хранения ссылок проработанных http запросы
        texts - для хранения текста, извлеченного из тела http запроса

    После пула файлов из репозиторя, необходимо сделать:

        $ git pull
        $ git submodule init
        $ git submodule update
        $ mkdir configs
        $ cp examples/config.json configs/config.json
        $ cp examples/mysqlMockData.json configs/mysqlMockData.json

        # в configs/config.json прописать правильные пути до директории бота,
          для подключения к базам данных, анализатору.
          Боты могут писать лог в stdout (значения [ 'modest' 'detail' 'none' ])

        $ npm install
        $ npm test

    Проверка работы (npm test вызывает эти скрипты, см. package.json):

        $ node tests/depending.js
        $ node tests/encoding.js

    Запустить бота достаточно просто:

        $ node index.js

    Также надо запуситить помощника:

        $ node helper.js

Sphinx

    Файл конфигурации examples/sphinx-mongo.conf настроен на работу через xmlpipe2 и содержит 2 индекса.
    Xmlpipe2 вызывает исполнение xmltexts.py, который формирует xml с 1000 документов, которые еще не были
    проиндексированы ранее.

    Секции source & index надо включить в боевой конфиг sphinx'a.
    Для локальных проверок можно запускать прямо так с
    предустановленными настройками, но ПЕРЕПИСАТЬ ПУТИ СФИНКСА!:

    $ indexer --config %YOURCONFIGNAME% --all --verbose --rotate
    $ sudo service sphinxsearch restart